<!--&lt;!&ndash; notice.xml &ndash;&gt;-->

<!--<!DOCTYPE mapper-->
<!--        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"-->
<!--        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">-->

<!--<mapper namespace="com.automated.trading.stock.StockManager.util.mapper.NoticeMapper">-->

<!--    <resultMap id="NoticeResultMap" type="com.automated.trading.stock.StockManager.stock.post.notice.dto.ReturnNoticeResponseDto">-->
<!--        <id property="post_fk" column="post_fk" />-->
<!--        <result property="title" column="title" />-->
<!--        <result property="content" column="content" />-->
<!--        <result property="post_type" column="post_type" />-->
<!--        <result property="wrt_dt" column="wrt_dt" />-->
<!--        <result property="mod_dt" column="mod_dt" />-->
<!--        <result property="imprtnc" column="imprtnc" />-->
<!--        <result property="member_id" column="member_id" />-->
<!--    </resultMap>-->

<!--    <insert id="saveNotice" parameterType="com.automated.trading.stock.StockManager.stock.post.notice.dto.NoticeSaveRequestDto">-->
<!--        INSERT INTO stockdb.public.post (title, content, wrt_dt, member_id, post_type)-->
<!--        VALUES (#{title}, #{content}, current_timestamp, #{member_id}, 'notice');-->
<!--        INSERT INTO stockdb.public.notice (post_fk, imprtnc)-->
<!--        VALUES (currval('post_post_id_seq'), #{imprtnc});-->
<!--    </insert>-->

<!--    <update id="updateNotice" parameterType="com.automated.trading.stock.StockManager.stock.post.notice.dto.NoticeUpdateRequestDto">-->
<!--        UPDATE stockdb.public.post-->
<!--        SET-->
<!--        <if test="title != null and title != ''">-->
<!--            title = #{title},-->
<!--        </if>-->
<!--        <if test="content != null and content != ''">-->
<!--            content = #{content},-->
<!--        </if>-->
<!--        mod_dt = CURRENT_TIMESTAMP-->
<!--        WHERE post_id = #{post_fk} and member_id = #{member_id};-->
<!--    </update>-->

<!--    <delete id="deleteNotice" parameterType="com.automated.trading.stock.StockManager.stock.post.notice.dto.NoticeDeleteRequestDto">-->
<!--        DELETE FROM stockdb.public.notice-->
<!--        WHERE post_fk = #{post_fk};-->
<!--        DELETE FROM stockdb.public.post-->
<!--        WHERE post_id = #{post_fk} and member_id = #{member_id};-->
<!--    </delete>-->
<!--    -->
<!--    <select id="findAllNotices" resultMap="NoticeResultMap">-->
<!--        SELECT *-->
<!--        FROM stockdb.public.post JOIN stockdb.public.notice-->
<!--        ON post.post_id = notice.post_fk-->
<!--        ORDER BY post_id;-->
<!--    </select>-->

<!--    <select id="findById" resultMap="NoticeResultMap" parameterType="int">-->
<!--        SELECT *-->
<!--        FROM stockdb.public.post JOIN stockdb.public.notice-->
<!--        ON post.post_id = notice.post_fk-->
<!--        WHERE post_id = #{notice_id};-->
<!--    </select>-->

<!--</mapper>-->
